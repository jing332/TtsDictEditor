plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlinx-serialization'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp'
}

static def releaseTime() {
    return new Date().format("yy.MMddHH", TimeZone.getTimeZone("GMT+8"))
}

// 秒时间戳
static def buildTime() {
    def t = new Date().time / 1000
    return (long) t
}

def name = "editor"
def version = "1." + releaseTime()
def gitCommits = Integer.parseInt('git rev-list HEAD --count'.execute().text.trim())

android {
    namespace 'com.github.jing332.tts_dict_editor'
    compileSdk compileSdk_version

    defaultConfig {
        applicationId "com.github.jing332.tts_dict_editor"
        minSdk 21
        targetSdk 33
        versionCode gitCommits
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        composeOptions {
            kotlinCompilerExtensionVersion compose_compiler_version
        }

        ksp {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
            arg("room.incremental", "true")
            arg("room.expandProjection", "true")
        }

        // 写入构建 秒时间戳
        buildConfigField("long", "BUILD_TIME", "${buildTime()}")
    }

    signingConfigs {
        release {
            //签名文件 从local.properties取值
            Properties pro = new Properties()
            InputStream input = project.rootProject.file("local.properties").newDataInputStream()
            pro.load(input)
            storeFile file(pro.getProperty("KEY_PATH"))
            storePassword pro.getProperty("KEY_PASSWORD")
            keyAlias pro.getProperty("ALIAS_NAME")
            keyPassword pro.getProperty("ALIAS_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
            applicationIdSuffix ".debug"
            versionNameSuffix "_debug"
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/INDEX.LIST', 'META-INF/*.md']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    kotlin {
        jvmToolchain(17)
//        sourceSets.all{
//            languageSettings{
//                languageVersion = "2.0"
//            }
//        }
    }

    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach { output ->
            output.outputFileName = "TtsDictEditor-v${variant.versionName}.apk"
        }
    }
}

dependencies {
    implementation project(":cascade-compose")

    // IO & NET
    implementation 'com.squareup.okio:okio:3.3.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.github.liangjingkanji:Net:3.5.7'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1'
    implementation("com.charleskorn.kaml:kaml:0.55.0")

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    implementation 'androidx.documentfile:documentfile:1.0.1'

    // https://github.com/FunnySaltyFish/ComposeDataSaver
    implementation "com.github.FunnySaltyFish.ComposeDataSaver:data-saver:v1.1.5"
    // https://github.com/tfaki/ComposableSweetToast
    implementation 'com.github.tfaki:ComposableSweetToast:1.0.1'
    // https://github.com/aclassen/ComposeReorderable
    implementation "org.burnoutcrew.composereorderable:reorderable:0.9.6"

    // https://github.com/gyf-dev/ImmersionBar
    implementation 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    implementation 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'

    def accompanist_version = '0.31.3-beta'
    implementation "com.google.accompanist:accompanist-systemuicontroller:${accompanist_version}"
    implementation "com.google.accompanist:accompanist-navigation-animation:${accompanist_version}"

    // https://github.com/LouisCAD/Splitties
    implementation 'com.louiscad.splitties:splitties-systemservices:3.0.0'

    // Room Database
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // Compose
    def compose_bom_version = '2023.05.01'
    implementation platform("androidx.compose:compose-bom:${compose_bom_version}")
    androidTestImplementation platform("androidx.compose:compose-bom:${compose_bom_version}")

    implementation "androidx.compose.ui:ui:${compose_version}"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.animation:animation:${compose_version}"
    implementation "androidx.compose.ui:ui-graphics:${compose_version}"
    implementation "androidx.compose.ui:ui-tooling-preview:${compose_version}"
    implementation "androidx.compose.runtime:runtime-livedata:${compose_version}"

    implementation 'androidx.compose.material3:material3:1.1.0'
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.navigation:navigation-compose:2.5.3"

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:${compose_version}"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform("androidx.compose:compose-bom:${compose_bom_version}")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:${compose_version}"
}
